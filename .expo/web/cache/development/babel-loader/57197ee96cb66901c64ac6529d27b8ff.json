{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\james\\\\Documents\\\\Kampung\\\\KampungKakis\\\\KampungKakis\\\\startscreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { NavigationHelpersContext } from '@react-navigation/native';\nimport React, { Component, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport HomeScreen from \"./Screens/Main\";\n\nvar storeData = function storeData(value) {\n  return _regeneratorRuntime.async(function storeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('cookie', value));\n\n        case 3:\n          _context.next = 7;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar getData = function getData() {\n  var value;\n  return _regeneratorRuntime.async(function getData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('cookie'));\n\n        case 3:\n          value = _context2.sent;\n\n          if (!(value !== null)) {\n            _context2.next = 6;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", value);\n\n        case 6:\n          _context2.next = 10;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar Inputs = function (_Component) {\n  _inherits(Inputs, _Component);\n\n  var _super = _createSuper(Inputs);\n\n  function Inputs() {\n    var _this;\n\n    _classCallCheck(this, Inputs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: ''\n    };\n\n    _this.handleEmail = function (text) {\n      _this.setState({\n        email: text\n      });\n    };\n\n    _this.handlePassword = function (text) {\n      _this.setState({\n        password: text\n      });\n    };\n\n    _this.login = function _callee(email, pass) {\n      var stuff;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              fetch(\"https://ad403e0e242b.ngrok.io/login?phone=\" + email + \"&password=\" + pass, {\n                mode: 'cors',\n                method: \"GET\"\n              }).then(function (response) {\n                return response.text();\n              }).then(function (body) {\n                storeData(body);\n              });\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(getData());\n\n            case 3:\n              stuff = _context3.sent;\n\n              if (stuff == 'Error') {\n                console.log(\"wrong\");\n                alert('Wrong username/password');\n              } else {\n                React.createElement(HomeScreen, {\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 10\n                  }\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(Inputs, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 10\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Email\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: this.handleEmail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Password\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: this.handlePassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return _this2.login(_this2.state.email, _this2.state.password);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.submitButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \" Login \")), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Signup');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.submitButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, \" Sign up \"))));\n    }\n  }]);\n\n  return Inputs;\n}(Component);\n\nexport default Inputs;\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 23\n  },\n  input: {\n    margin: 15,\n    height: 40,\n    borderColor: '#7a42f4',\n    borderWidth: 1\n  },\n  submitButton: {\n    backgroundColor: '#7a42f4',\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/james/Documents/Kampung/KampungKakis/KampungKakis/startscreen.js"],"names":["NavigationHelpersContext","React","Component","useState","NavigationContainer","createStackNavigator","AsyncStorage","HomeScreen","storeData","value","setItem","getData","getItem","Inputs","state","email","password","handleEmail","text","setState","handlePassword","login","pass","fetch","mode","method","then","response","body","stuff","console","log","alert","styles","container","input","flexDirection","justifyContent","submitButton","submitButtonText","props","navigation","navigate","StyleSheet","create","paddingTop","margin","height","borderColor","borderWidth","backgroundColor","padding","color"],"mappings":"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","sourcesContent":["import { NavigationHelpersContext } from '@react-navigation/native'\r\nimport React, { Component, useState } from 'react'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { View, Text, TouchableOpacity, TextInput, StyleSheet } from 'react-native'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport HomeScreen from './Screens/Main';\r\n\r\n\r\nconst storeData = async (value) => {\r\n\r\n   try {\r\n     await AsyncStorage.setItem('cookie', value)\r\n   } catch (e) {\r\n     // saving error\r\n   }\r\n }\r\n\r\nconst getData = async () => {\r\n   try {\r\n     const value = await AsyncStorage.getItem('cookie')\r\n     if(value !== null) {\r\n        return value    \r\n     }\r\n   } catch(e) {\r\n     // error reading value\r\n   }\r\n }\r\nclass Inputs extends Component {\r\n   state = {\r\n      email: '',\r\n      password: ''\r\n      }\r\n   \r\n   handleEmail = (text) => {\r\n      this.setState({ email: text })\r\n   }\r\n   handlePassword = (text) => {\r\n      this.setState({ password: text })\r\n   }\r\n   //https://ad403e0e242b.ngrok.io/getchat?cookie=lgPn3k7vYXTo\r\n   login = async (email, pass) => {\r\n      fetch(\"https://ad403e0e242b.ngrok.io/login?phone=\"+email+\"&password=\"+pass,{mode: 'cors', method: \"GET\"}).then(response => response.text()).then((body)=>{storeData(body);});\r\n      const stuff = await getData()\r\n      if (stuff == 'Error') {\r\n         console.log(\"wrong\")\r\n         alert('Wrong username/password')\r\n      } else {\r\n         <HomeScreen/>\r\n      }\r\n      }\r\n   \r\n   render() {\r\n      return (\r\n         <View style = {styles.container}>\r\n            <TextInput style = {styles.input}\r\n               underlineColorAndroid = \"transparent\"\r\n               placeholder = \"Email\"\r\n               placeholderTextColor = \"#9a73ef\"\r\n               autoCapitalize = \"none\"\r\n               onChangeText = {this.handleEmail}/>\r\n            \r\n            <TextInput style = {styles.input}\r\n               underlineColorAndroid = \"transparent\"\r\n               placeholder = \"Password\"\r\n               placeholderTextColor = \"#9a73ef\"\r\n               autoCapitalize = \"none\"\r\n               onChangeText = {this.handlePassword}/>\r\n            <View style={{ flexDirection: \"row\",justifyContent:'center'}}>\r\n                <TouchableOpacity\r\n                style = {styles.submitButton}\r\n                onPress = {\r\n                    () => this.login(this.state.email,this.state.password)\r\n                }>\r\n                <Text style = {styles.submitButtonText}> Login </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                style = {styles.submitButton}\r\n                onPress = {\r\n                    () => this.props.navigation.navigate('Signup')\r\n                }>\r\n                <Text style = {styles.submitButtonText}> Sign up </Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n         </View>\r\n      )\r\n   }\r\n}\r\nexport default Inputs\r\n\r\nconst styles = StyleSheet.create({\r\n   container: {\r\n      paddingTop: 23\r\n   },\r\n   input: {\r\n      margin: 15,\r\n      height: 40,\r\n      borderColor: '#7a42f4',\r\n      borderWidth: 1\r\n   },\r\n   submitButton: {\r\n      backgroundColor: '#7a42f4',\r\n      padding: 10,\r\n      margin: 15,\r\n      height: 40,\r\n   },\r\n   submitButtonText:{\r\n      color: 'white'\r\n   }\r\n})"]},"metadata":{},"sourceType":"module"}