{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\james\\\\Documents\\\\Kampung\\\\KampungKakis\\\\KampungKakis\\\\signup.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { NavigationHelpersContext } from '@react-navigation/native';\nimport React, { Component, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport HomeScreen from \"./Screens/Main\";\nexport default function AddScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emailtext = _useState4[0],\n      setEmailText = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phonetext = _useState6[0],\n      setPhoneText = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      postaltext = _useState8[0],\n      setPostalText = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pwtext = _useState10[0],\n      setPWText = _useState10[1];\n\n  var textAlignments = [\"auto\", \"left\", \"right\", \"center\", \"justify\"];\n\n  var Inputs = function (_Component) {\n    _inherits(Inputs, _Component);\n\n    var _super = _createSuper(Inputs);\n\n    function Inputs() {\n      var _this;\n\n      _classCallCheck(this, Inputs);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _this.register = function _callee(text, emailtext, phonetext, postaltext, pwtext) {\n        var stuff;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                stuff = '';\n                fetch(\"https://ad403e0e242b.ngrok.io/register?name=\" + text + \"&email=\" + emailtext + \"&phone=\" + phonetext + \"&postalcode=\" + postaltext + \"&password=\" + pwtext, {\n                  mode: 'cors',\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.text();\n                }).then(function (body) {\n                  return body, _readOnlyError(\"stuff\");\n                });\n                console.log(stuff);\n\n                if (stuff == 'Error') {\n                  alert('Wrong username/password');\n                } else {\n                  _this.props.navigation.navigate('Main');\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      return _this;\n    }\n\n    _createClass(Inputs, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 5\n          }\n        }, React.createElement(Text, {\n          style: styles.labelmain,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 7\n          }\n        }, \"Sign Up\"), React.createElement(Text, {\n          style: styles.label,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 7\n          }\n        }, \"Name\"), React.createElement(TextInput, {\n          style: styles.textInput,\n          value: text,\n          onChangeText: function onChangeText(newText) {\n            return setText(newText);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 7\n          }\n        }), React.createElement(Text, {\n          style: styles.labelemail,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }\n        }, '\\t', \"Email Address\"), React.createElement(TextInput, {\n          style: styles.textInput,\n          value: emailtext,\n          onChangeText: function onChangeText(newText) {\n            return setEmailText(newText);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 7\n          }\n        }), React.createElement(Text, {\n          style: styles.labelmobile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }\n        }, '\\n', \"Mobile Number\"), React.createElement(TextInput, {\n          style: styles.textInput,\n          value: phonetext,\n          onChangeText: function onChangeText(newText) {\n            return setPhoneText(newText);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }\n        }), React.createElement(Text, {\n          style: styles.labelpc,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }\n        }, '\\n', \"Postal Code\"), React.createElement(TextInput, {\n          style: styles.textInput,\n          value: postaltext,\n          onChangeText: function onChangeText(newText) {\n            return setPostalText(newText);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }\n        }), React.createElement(Text, {\n          style: styles.labelpw,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }\n        }, '\\n', \"Set a Password\"), React.createElement(TextInput, {\n          style: styles.textInput,\n          value: pwtext,\n          onChangeText: function onChangeText(newText) {\n            return setPWText(newText);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }\n        }), React.createElement(View, {\n          style: styles.buttons,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 5\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.register(text, emailtext, phonetext, postaltext, pwtext);\n          },\n          style: [styles.button, styles.submitButton],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }\n        }, \"Submit\")), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          style: [styles.button, styles.cancelButton],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }\n        }, \"Cancel\"))));\n      }\n    }]);\n\n    return Inputs;\n  }(Component);\n}\nvar styles = StyleSheet.create({\n  labelmain: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    marginBottom: 50\n  },\n  label: {\n    fontSize: 15,\n    marginLeft: -220,\n    marginBottom: -12\n  },\n  labelemail: {\n    fontSize: 15,\n    marginLeft: -200,\n    marginBottom: -12\n  },\n  labelmobile: {\n    fontSize: 15,\n    marginLeft: -155,\n    marginBottom: -12\n  },\n  labelpc: {\n    fontSize: 15,\n    marginLeft: -185,\n    marginBottom: -12\n  },\n  labelpw: {\n    fontSize: 15,\n    marginLeft: -165,\n    marginBottom: -12\n  },\n  textInput: {\n    margin: 20,\n    borderWidth: 1,\n    width: \"80%\",\n    padding: 10,\n    borderColor: \"#ccc\"\n  },\n  buttons: {\n    flexDirection: \"row\"\n  },\n  button: {\n    padding: 10,\n    margin: 5\n  },\n  buttonText: {\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  submitButton: {\n    backgroundColor: \"orange\"\n  },\n  cancelButton: {\n    backgroundColor: \"red\"\n  }\n});","map":{"version":3,"sources":["C:/Users/james/Documents/Kampung/KampungKakis/KampungKakis/signup.js"],"names":["NavigationHelpersContext","React","Component","useState","NavigationContainer","createStackNavigator","AsyncStorage","HomeScreen","AddScreen","route","navigation","text","setText","emailtext","setEmailText","phonetext","setPhoneText","postaltext","setPostalText","pwtext","setPWText","textAlignments","Inputs","register","stuff","fetch","mode","method","then","response","body","console","log","alert","props","navigate","flex","alignItems","justifyContent","styles","labelmain","label","textInput","newText","labelemail","labelmobile","labelpc","labelpw","buttons","button","submitButton","buttonText","goBack","cancelButton","StyleSheet","create","fontSize","fontWeight","marginBottom","marginLeft","margin","borderWidth","width","padding","borderColor","flexDirection","color","backgroundColor"],"mappings":"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","sourcesContent":["import { NavigationHelpersContext } from '@react-navigation/native'\r\nimport React, { Component, useState } from 'react'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { View, Text, TouchableOpacity, TextInput, StyleSheet } from 'react-native'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport HomeScreen from './Screens/Main';\r\nexport default function AddScreen({ route, navigation }) {\r\n\r\nconst [text, setText] = useState(\"\");\r\nconst [emailtext, setEmailText] = useState(\"\");\r\nconst [phonetext, setPhoneText] = useState(\"\");\r\nconst [postaltext, setPostalText] = useState(\"\");\r\nconst [pwtext, setPWText] = useState(\"\");\r\nconst textAlignments = [\"auto\", \"left\", \"right\", \"center\", \"justify\"];\r\n\r\nclass Inputs extends Component {\r\nregister = async (text, emailtext, phonetext, postaltext, pwtext) => {\r\n  const stuff = ''\r\n  fetch(\"https://ad403e0e242b.ngrok.io/register?name=\"+text+\"&email=\"+emailtext+\"&phone=\"+phonetext+\"&postalcode=\"+postaltext+\"&password=\"+pwtext,{mode: 'cors', method: \"GET\"}).then(response => response.text()).then(body=>stuff=body);\r\n      console.log(stuff)\r\n      if (stuff == 'Error') {\r\n         alert('Wrong username/password')\r\n      } else {\r\n         this.props.navigation.navigate('Main')\r\n  }\r\n  }\r\n  render() {\r\n  return (\r\n    <View style={{ flex:1, alignItems: \"center\", justifyContent: \"center\"}}>\r\n      <Text style={styles.labelmain}>Sign Up</Text> \r\n      <Text style={styles.label}>Name</Text>\r\n      <TextInput\r\n        style={styles.textInput}\r\n        value={text}\r\n        onChangeText={(newText) => setText(newText)}\r\n    ></TextInput>\r\n      <Text style={styles.labelemail}>{'\\t'}Email Address</Text>\r\n      <TextInput\r\n        style={styles.textInput}\r\n        value={emailtext}\r\n        onChangeText={(newText) => setEmailText(newText)}\r\n    ></TextInput>\r\n      <Text style={styles.labelmobile}>{'\\n'}Mobile Number</Text>\r\n      <TextInput\r\n        style={styles.textInput}\r\n        value={phonetext}\r\n        onChangeText={(newText) => setPhoneText(newText)}\r\n    ></TextInput>\r\n      <Text style={styles.labelpc}>{'\\n'}Postal Code</Text>\r\n      <TextInput\r\n        style={styles.textInput}\r\n        value={postaltext}\r\n        onChangeText={(newText) => setPostalText(newText)}\r\n    ></TextInput>\r\n      <Text style={styles.labelpw}>{'\\n'}Set a Password</Text>\r\n      <TextInput\r\n        style={styles.textInput}\r\n        value={pwtext}\r\n        onChangeText={(newText) => setPWText(newText)}\r\n    ></TextInput>\r\n    <View style={styles.buttons}>\r\n      <TouchableOpacity\r\n        onPress={() => this.register(text, emailtext, phonetext, postaltext, pwtext)\r\n        }\r\n        style={[styles.button, styles.submitButton]}\r\n      >\r\n        <Text style={styles.buttonText}>Submit</Text>\r\n      </TouchableOpacity>\r\n      \r\n      <TouchableOpacity\r\n        onPress={() => navigation.goBack()}\r\n        style={[styles.button, styles.cancelButton]}\r\n      >\r\n        <Text style={styles.buttonText}>Cancel</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  </View>\r\n  );\r\n}}}\r\n\r\nconst styles = StyleSheet.create({\r\n  labelmain: {\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 50,\r\n  },\r\n  label: {\r\n    fontSize: 15,\r\n    marginLeft: -220,\r\n    marginBottom: -12,\r\n  },\r\n  labelemail: {\r\n    fontSize: 15,\r\n    marginLeft: -200,\r\n    marginBottom: -12,\r\n  },\r\n  labelmobile: {\r\n    fontSize: 15,\r\n    marginLeft: -155,\r\n    marginBottom: -12,\r\n  },\r\n  labelpc: {\r\n    fontSize: 15,\r\n    marginLeft: -185,\r\n    marginBottom: -12,\r\n  },\r\n  labelpw: {\r\n    fontSize: 15,\r\n    marginLeft: -165,\r\n    marginBottom: -12,\r\n  },\r\n  textInput: {\r\n    margin: 20,\r\n    borderWidth: 1,\r\n    width: \"80%\",\r\n    padding: 10,\r\n    borderColor: \"#ccc\",\r\n  },\r\n  buttons: {\r\n    flexDirection: \"row\",\r\n  },\r\n  button: {\r\n      padding: 10,\r\n      margin: 5,\r\n  },\r\n  buttonText: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n  },\r\n  submitButton: {\r\n    backgroundColor: \"orange\",\r\n  },\r\n  cancelButton: {\r\n    backgroundColor:\"red\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}